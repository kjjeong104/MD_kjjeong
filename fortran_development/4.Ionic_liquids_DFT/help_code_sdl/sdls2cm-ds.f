C       LIQUID STRUCTURE CALCULATION
C       WRITTEN BY CHANDRA N. PATRA
C       2CM DIFFERENT SIZE IN SPHERICAL GEOMETRY
C       WRITTEN BY CHANDRA N. PATRA
C       ALL RIGHTS RESERVED
        IMPLICIT DOUBLE PRECISION(A-H,O-Z)
        PARAMETER(PI = 3.141592653589793D0, FPI = 4.0D0*PI)
        PARAMETER(ALH = 30.0D0, DZ = 0.002D0, NMAX=1+(ALH/DZ))
        DIMENSION R(NMAX),DENP(NMAX),DENM(NMAX),DENS(NMAX)
        DIMENSION DENBARP(NMAX),DENBARM(NMAX),DENBARS(NMAX)
        DIMENSION DELDENP(NMAX),DELDENM(NMAX),DELDENS(NMAX)
        DIMENSION FPP(NMAX),FMM(NMAX),FSS(NMAX)
        DIMENSION PSI(NMAX),PRPSI(NMAX)
        DIMENSION C1EL11(NMAX),C1EL12(NMAX),C1EL13(NMAX)
        DIMENSION C1EL14(NMAX),C1EL15(NMAX),C1EL16(NMAX)
        DIMENSION C1EL21(NMAX),C1EL22(NMAX),C1EL23(NMAX)
        DIMENSION C1EL31(NMAX),C1EL32(NMAX),C1EL33(NMAX)
        DIMENSION C1EL1P(NMAX),C1EL1M(NMAX),C1EL1S(NMAX)
C
        COMMON/DIST/R
        COMMON/DRATIO/DBD2,DBD3
        COMMON/DENRATIO/XP,XM,XS
        COMMON/DENSITY/DENAVT
        COMMON/MBREAK/MESHBREAK
        COMMON/CHARGE/QP,QS,SIGMA,ESTAR
C
        OPEN(4,FILE='sdls2cm-ds.inp',STATUS='UNKNOWN')
        READ(4,*)CONCAVP,CONCAVM,CONCAVS
        READ(4,*)QP,QS,SIGMA
        READ(4,*)DVAL,RVAL
        READ(4,*)DBD2,DBD3
        READ(4,*)TEMP,DIEL
        READ(4,*)CMIX,DEVTOL
        READ(4,*)NOPT
        READ(4,*)OLDDEN
C
        CLOSE(4,STATUS='KEEP')
C
        BOLTZ = 1.38066D-16
        AVOGAD = 6.023D23
        ELECHARGE = 4.8D-10
        ELEC = 1.602D-19
C
        BETA = 1.0D0/BOLTZ/TEMP
        ESTAR=ELECHARGE*DSQRT(BETA/(DIEL*DVAL))
        RVALM = RVAL*1.D-2
        SIGMA = FPI*RVALM*RVALM*SIGMA/ELEC
        FACPSI = 1.D3/BETA/1.602D-12
        write(*,*) 'sigma=',sigma,facpsi
C
        DENAVP = CONCAVP*AVOGAD*DVAL*DVAL*DVAL/1000.0D0
        DENAVM = CONCAVM*AVOGAD*DVAL*DVAL*DVAL/1000.0D0
        DENAVS = CONCAVS*AVOGAD*DVAL*DVAL*DVAL/1000.0D0
C
        CDENTOTAL = QP*DENAVP + QS*DENAVS
        DENAVT = DENAVP + DENAVM + DENAVS
        XP=DENAVP/DENAVT
        XM=DENAVM/DENAVT
        XS=DENAVS/DENAVT
        ETA=(PI/6.0)*DENAVT*(XP+DBD2**3*XM+DBD3**3*XS)
        write(*,*) ETA
C
        MESH = NMAX
        MESHBREAK = MESH - (5.0D0/DZ)
C     
        OPEN(9,FILE='sdls2cm-ds.out',STATUS='UNKNOWN')
C
        WRITE(9,111)ALH, MESH
        WRITE(9,*)
        WRITE(9,112)QP,QS,SIGMA
        WRITE(9,*)
        WRITE(9,1199)DVAL,RVAL
        WRITE(9,*)
        WRITE(9,1191)DBD2,DBD3
        WRITE(9,*)
        WRITE(9,113)DENAVP,DENAVM,DENAVS,CDENTOTAL,DENAVT,XP,XM,XS
        WRITE(9,*)
        WRITE(9,114)TEMP,DIEL
        WRITE(9,*)
        WRITE(9,1141)CMIX,DEVTOL
        WRITE(9,*)
        WRITE(9,115)NOPT
        WRITE(9,*)
        WRITE(9,116)OLDDEN
C
111     FORMAT(2X,'WALL SEPARATION',4X,F18.8 /
     C         2X,'MESH POINTS',2X,I10)
1199    FORMAT(2X,'HARD SPHERE RADIUS',4X,D18.10/
     C         2X,'LARGE SPHERE RADIUS',4X,E18.8)
1191    FORMAT(2X,'DIAMETER RATIO1',4X,E18.8/
     C          2X,'DIAMETER RATIO2',4X,E18.8)
112     FORMAT(2X,'POSITIVE CHARGE 1',4X,D18.10/
     C         2X,'NEGATIVE CHARGE ',4X,D18.10/
     C         2X,'SURF CHARGE DENSITY',2X,D18.10)
113     FORMAT(2X,'AVERAGE DENSITY',4X,(9E18.8,2X))
114     FORMAT(2X,'TEMPERATURE        ',4X,D18.10/
     C         2X,'DIELECTRIC CONSTANT',2X,F8.4)
1141     FORMAT(2X,'MIXING COEFFICIENT',2X,E18.8/
     C         2X,'TOLERANCE LIMIT',5X,E18.8)
115     FORMAT(2X,'WRITING OPTION',2X,I10)
116     FORMAT(2X,'OLD DENSITY USED',2X,F18.8)
C
C       INITIALIZE THE MESH POINTS
        DO I=1,MESH
         R(I)=DFLOAT(I-1)*DZ
        ENDDO
C
        AKAPP=DSQRT(FPI*ESTAR*ESTAR*(QP*QP*DENAVP+QS*QS*DENAVS
     C             ))
        ATERM=0.5D0*FPI*ESTAR*ESTAR*SIGMA*QP/AKAPP
        BTERM=2.0D0*DLOG(ATERM+DSQRT(ATERM*ATERM+1.0D0))
        UTERM=(1.0D0-DEXP(-2.0D0*BTERM/4.0D0))
     C       /(1.0D0+DEXP(-2.0D0*BTERM/4.0D0))
C
        DO I=1,MESH
         UZ=UTERM*DEXP(-AKAPP*(R(I)-R(1)))
         BQPSIZ=2.0*DLOG((1.0+UZ)/(1.0-UZ))
         DENP(I)=DENAVP*DEXP(-QP*BQPSIZ/DABS(QP))
         DENS(I)=DENAVS*DEXP(-QS*BQPSIZ/DABS(QS))
         DENM(I) = DENAVM
        ENDDO
C
        DO I=1,MESH
         IF(R(I).LT.(RVAL/DVAL+0.5D0)) DENP(I) = 0.0D0
         IF(R(I).LT.(RVAL/DVAL+0.5D0*DBD2)) DENM(I) = 0.0D0
         IF(R(I) .LT. (RVAL/DVAL+0.5D0*DBD3)) DENS(I) = 0.0D0
         DENBARP(I) = DENAVP+DENAVM+DENAVS
         DENBARM(I) = DENAVP+DENAVM+DENAVS
         DENBARS(I) = DENAVP+DENAVM+DENAVS
        ENDDO 
C
        IF(OLDDEN .EQ. 1.0D0) THEN
         OPEN(1,FILE='sdls2cm-ds.ic',STATUS='UNKNOWN')
         DO I = 1, MESH
          READ(1,117)R(I),DENP(I),DENM(I),DENS(I),
     C               DENBARP(I),DENBARM(I),DENBARS(I)
         ENDDO
         CLOSE(1,STATUS='KEEP')
        ENDIF
C
C       START ITERATION 
C
        NITER=0
105     CONTINUE
        NITER=NITER+1
        WRITE(*,*) 'Step started ',NITER
C
        IF(NOPT .EQ. 1)THEN
         IF(MOD(NITER,5) .EQ. 0)THEN
          WRITE(6,*)'GIVE CMIX,DEVTOL'
          READ(5,*)CMIX,DEVTOL
         ENDIF
        ENDIF
C
C       CALCULATE POTENTIAL (\beta*e*\psi(z))

        CALL COUL(DENP,DENS,PSI,PRPSI)
C
C        CALCULATE C2ELINT
         CALL C2ELINT(DENP,DENS,DENAVP,DENAVS,
     C        DENBARP,DENBARS,C1EL11,C1EL13,
     C        C1EL31,C1EL33)
         DO I = 1, MESH
          C1EL1P(I) = C1EL11(I) + C1El13(I)
          C1EL1S(I) = C1EL31(I) + C1EL33(I)
C          WRITE(2,331)I,R(I),C1EL11(I),C1EL12(I),C1EL13(I),
C     C    C1EL21(I),C1EL22(I),C1EL23(I),C1El31(I),C1EL32(I),C1EL33(I)
         ENDDO
331     FORMAT(2X,20(D18.10,2X))
C       DEFINE \rho_0

        DENP1=DENAVP+DENAVM+DENAVS
        DENM2=DENAVM+DENAVP+DENAVS
        DENS3=DENAVM+DENAVP+DENAVS
      
C       CALCULATE C_1(\rho_0)

        CALL CFUNAB(DENP1,DENM2,DENS3,C11P0,C12P0,C13P0,
     C              C21M0,C22M0,C23M0,C31S0,C32S0,C33S0)

C
        C1PA=C11P0+C12P0+C13P0
        C1MA=C21M0+C22M0+C23M0
        C1SA=C31S0+C32S0+C33S0
C        write(*,*)C11P0,C12P0,C13P0,C21M0,C22M0,C23M0,C31S0,C32S0,C33S0

C       CALCULATE DENBAR (\bar{\rho})

        CALL DENBAR(DENP,DENM,DENS,DENAVP,DENAVM,DENAVS,
     C              DENBARP,DENBARM,DENBARS)

C
         DO 50 I=1,MESH
C
          DENP1=DENBARP(I)
          DENM2=DENBARM(I)
          DENS3=DENBARS(I)
C
          CALL CFUNAB(DENP1,DENM2,DENS3,C11P,C12P,C13P,
     C                C21M,C22M,C23M,C31S,C32S,C33S)

          C1PB=C11P+C12P+C13P
          C1MB=C21M+C22M+C23M
          C1SB=C31S+C32S+C33S
C          write(*,*)C11P,C12P,C13P,C21M,C22M,C23M,C31S,C32S,C33S

C        CALCULATE DENSITY (MAIN EQUATION)

          FP=-QP*PSI(I)+C1PB-C1PA+C1EL11(I)+C1EL13(I)
          FM=C1MB-C1MA
          FS=-QS*PSI(I)+C1SB-C1SA+C1EL31(I)+C1EL33(I)
C
          FPP(I) = FP
          FMM(I) = FM
          FSS(I) = FS
C
50       CONTINUE     
C
        FPPMESH=FPP(MESH)
        FMMMESH=FMM(MESH)
        FSSMESH=FSS(MESH)
        PSIMESH=PSI(MESH)
C
        DO I=1,MESH
         FP=FPP(I) - FPPMESH
         FM=FMM(I) - FMMMESH
         FS=FSS(I) - FSSMESH
         PSI(I) = PSI(I) - PSIMESH
C
         DELDENP(I) = 0.0D0
         IF(DENP(I) .GT. 0.0D0) THEN
          DELDENP(I)=DENP(I)*(FP-DLOG(DABS(DENP(I)/DENAVP)))
         ENDIF
         DELDENM(I) = 0.0D0
         IF(DENM(I).GT.0.0)THEN
          DELDENM(I)=DENM(I)*(FM-DLOG(DABS(DENM(I)/DENAVM)))
         ENDIF
         DELDENS(I) = 0.0D0
         IF(DENS(I).GT.0.0)THEN
          DELDENS(I)=DENS(I)*(FS-DLOG(DABS(DENS(I)/DENAVS)))
         ENDIF
C
         DENP(I)=(1.0-CMIX)*DENP(I)+CMIX*(DENP(I)+DELDENP(I))
         DENM(I)=(1.0-CMIX)*DENM(I)+CMIX*(DENM(I)+DELDENM(I))
         DENS(I)=(1.0-CMIX)*DENS(I)+CMIX*(DENS(I)+DELDENS(I))
        ENDDO
C
        SUMP=0.0D0
        SUMM=0.0D0
        SUMS=0.0D0
        SUMT=0.0D0
C
        DO I=1,MESH
         IF(DENAVP .GT. 0.0D0) THEN
          SUMP = SUMP + (DELDENP(I)/DENAVP)*(DELDENP(I)/DENAVP)
         ENDIF
         IF(DENAVM .GT. 0.0D0) THEN
          SUMM = SUMM + (DELDENM(I)/DENAVM)*(DELDENM(I)/DENAVM)
         ENDIF
         IF(DENAVS .GT. 0.0D0) THEN
          SUMS = SUMS + (DELDENS(I)/DENAVS)*(DELDENS(I)/DENAVS)
         ENDIF
         SUMT = SUMT + SUMP + SUMMM + SUMS 
        ENDDO

C        write(*,*)SUMP,SUMM,SUMS,SUMT
C        
        SUMP=DSQRT(0.5*SUMP/FLOAT(MESH))
        SUMM=DSQRT(0.5*SUMM/FLOAT(MESH))
        SUMS=DSQRT(0.5*SUMS/FLOAT(MESH))
        SUMT=DSQRT(0.5*SUMT/FLOAT(MESH))
C
        IF(NOPT.EQ.1)THEN
         WRITE(6,121)NITER,SUMP,SUMM,SUMS,SUMT
        ENDIF
        IF(MOD(NITER,50).EQ.0)THEN
         WRITE(9,121)NITER,SUMP,SUMM,SUMS,SUMT
         WRITE(6,121)NITER,SUMP,SUMM,SUMS,SUMT
        ENDIF
121     FORMAT(2X,'NITER',I10,4X,'SUMP',4X,E18.8,4X,
     C        'SUMM',4X,E18.8,4X,'SUMS',4X,E18.8,4X,'SUMT',4X,E18.8)

C
       IF(MOD(NITER,100) .EQ. 0)THEN
        OPEN(1, FILE = 'sdls2cm-ds.fc',STATUS='UNKNOWN')
        DO I = 1, MESH
         WRITE(1,117)R(I),DENP(I),DENM(I),DENS(I),
     C               DENBARP(I),DENBARM(I),DENBARS(I)
        ENDDO
        CLOSE(1,STATUS = 'KEEP')
       ENDIF
C
       IF(SUMT.GT.DEVTOL) GO TO 105
C
       OPEN(1, FILE = 'sdls2cm-ds.fc',STATUS='UNKNOWN')
       DO I = 1, MESH
        WRITE(1,117)R(I),DENP(I),DENM(I),DENS(I),
     C               DENBARP(I),DENBARM(I),DENBARS(I)
       ENDDO
       CLOSE(1,STATUS = 'KEEP')
C
       WRITE(9,*)'R,RHO(I),GRI,RHOBAR(I),FS(I)'
C
       OPEN(1, FILE = 'sdls2cm.out', STATUS = 'UNKNOWN') 
       DO I=1,MESH
        GPI = DENP(I)/DENAVP
        GMI = DENM(I)/DENAVM
        GSI = DENS(I)/DENAVS
        PSI1 = FACPSI*PSI(I)
C        WRITE(1,122)R(I),DENPI,DENMI,PSI,DENP(I),DENM(I),DENBARP(I),
C     C              DENBARM(I),C1EL1P(I),C1EL1M(I)
        WRITE(1,122)R(I),GPI,GMI,GSI,PSI(I),PRPSI(I),
     C              PSI1,DENP(I),DENM(I),DENS(I)
        WRITE(9,122)R(I),GPI,GMI,GSI,PSI(I),PRPSI(I),PSI1,DENP(I),
     C              DENM(I),DENS(I),DENBARP(I),DENBARM(I),DENBARS(I),
     C              C1EL1P(I),C1EL1M(I)
       ENDDO
122    FORMAT(1X,15(E18.8,2X))
117    FORMAT(14(E18.8,2X))
C
        STOP
        END
C
        SUBROUTINE SIMPBAR(F,VALINT,MESH1,MESH2)
        IMPLICIT DOUBLE PRECISION(A-H,O-Z)
        PARAMETER(ALH = 30.0D0, DZ = 0.002D0, NMAX=1+(ALH/DZ))
        DIMENSION F(NMAX)
C
        A1=0.0
        DO I=MESH1+1,MESH2
         A1=A1+(F(I)+F(I-1))
        ENDDO
        VALINT=A1*DZ/2.0D0
        RETURN
        END
C
        SUBROUTINE COUL(DENP,DENS,PSI,PRPSI)
        IMPLICIT DOUBLE PRECISION(A-H,O-Z)
        PARAMETER(PI = 3.141592653589793D0, FPI = 4.0D0*PI)
        PARAMETER(ALH = 30.0D0, DZ = 0.002D0, NMAX=1+(ALH/DZ))
        DIMENSION R(NMAX),DENP(NMAX),DENS(NMAX)
        DIMENSION VALA(NMAX),VALB(NMAX)
        DIMENSION PSI(NMAX),PRPSI(NMAX)
        COMMON/DIST/R
        COMMON/CHARGE/QP,QS,SIGMA,ESTAR
C
        MESH = NMAX
        AP1=0.0D0
        BP1=0.0D0
        AS1=0.0D0
        BS1=0.0D0
C
        DO I=2,MESH
         AP1=AP1+QP*DENP(I)*R(I)*R(I)+QP*DENP(I-1)*R(I-1)*R(I-1)
         AS1=AS1+QS*DENS(I)*R(I)*R(I)+QS*DENS(I-1)*R(I-1)*R(I-1)
         BP1=BP1+QP*(DENP(I)*R(I)+DENP(I-1)*R(I-1))
         BS1=BS1+QS*(DENS(I)*R(I)+DENS(I-1)*R(I-1))
         VALA(I)=(AP1+AS1)*DZ/2.0D0
         VALB(I)=(BP1+BS1)*DZ/2.0D0
        ENDDO
        VALA(1)=0.0D0
        VALB(1)=0.0D0
C
        DO I=1,MESH
         PSI(I) = 0.0D0
         PRPSI(I) = 0.0D0
         IF(I .NE. 1) THEN
          PSI(I)=FPI*ESTAR*ESTAR*
     C        ((VALA(I)+SIGMA/FPI)/R(I)+(VALB(MESH)-VALB(I)))
         ENDIF
         PRPSI(I) = FPI*VALA(I) + SIGMA
        ENDDO
C
        RETURN
        END
C
        SUBROUTINE DENBAR(DENP,DENM,DENS,DENAVP,DENAVM,DENAVS,
     C                    DENBARP,DENBARM,DENBARS)
        IMPLICIT DOUBLE PRECISION(A-H,O-Z)
        PARAMETER(PI = 3.141592653589793D0, FPI = 4.0D0*PI)
        PARAMETER(ALH=30.0D0, DZ = 0.002D0, NMAX=1+(ALH/DZ))
        DIMENSION R(NMAX),DENP(NMAX),DENM(NMAX),DENS(NMAX)
        DIMENSION DENBARP(NMAX),DENBARM(NMAX),DENBARS(NMAX)
        DIMENSION WP11(NMAX),WP12(NMAX),WP13(NMAX)
        DIMENSION WM21(NMAX),WM22(NMAX),WM23(NMAX)
        DIMENSION WS31(NMAX),WS32(NMAX),WS33(NMAX)
        DIMENSION FUNCP(NMAX),FUNCM(NMAX),FUNCS(NMAX)
C
        COMMON/DIST/R
        COMMON/DRATIO/DBD2,DBD3
        COMMON/MBREAK/MESHBREAK
C        
        MESH = NMAX
C
        AM12 = (DBD2+1.0D0)/2.0D0
        AN12 = DABS(DBD2-1.0D0)/2.0D0
        AM13 = (DBD3+1.0D0)/2.0D0
        AN13 = DABS(DBD3-1.0D0)/2.0D0
        AM23 = (DBD3+DBD2)/2.0D0
        AN23 = DABS(DBD3-DBD2)/2.0D0
C
        DBD22 = DBD2*DBD2
        DBD23 = DBD22*DBD2
        DBD24 = DBD23*DBD2
        DBD25 = DBD23*DBD22
        DBD32 = DBD3*DBD3
        DBD33 = DBD32*DBD3
        DBD34 = DBD33*DBD3
        DBD35 = DBD33*DBD32
C
        DENNDT=DENAVP + DENAVM + DENAVS
        CALL DENBARAB(DENNDT,PC11T,PC12T,PC13T,PC21T,PC22T,PC23T,
     C           PC31T,PC32T,PC33T,PA1T,PA2T,PA3T,PB1T,PB2T,PB3T,
     C           PB12T,PB13T,PB23T,PD0T)
C
        DO 100 I=1,MESH
C
         DO 200 J=1,MESH
C
          WP11(J)=0.0
          WP12(J)=0.0
          WP13(J)=0.0
          WM21(J)=0.0
          WM22(J)=0.0
          WM23(J)=0.0
          WS31(J)=0.0
          WS32(J)=0.0
          WS33(J)=0.0
          FUNCP(J)=0.0
          FUNCM(J)=0.0
          FUNCS(J)=0.0
          C11TRYP = 0.0D0
          C12TRYP = 0.0D0
          C13TRYP = 0.0D0
          C21TRYM = 0.0D0
          C22TRYM = 0.0D0
          C23TRYM = 0.0D0
          C31TRYS = 0.0D0
          C32TRYS = 0.0D0
          C33TRYS = 0.0D0
C
          DSR=DABS(R(I)-R(J))
          DSR2=DSR*DSR
          DSR3=DSR2*DSR
          DSR5=DSR3*DSR2
          DSR12=DSR-AN12
          DSR122=DSR12*DSR12
          DSR123=DSR122*DSR12
          DSR124=DSR123*DSR12
          DSR125=DSR123*DSR122
          DSR13=DSR-AN13
          DSR132=DSR13*DSR13
          DSR133=DSR132*DSR13
          DSR134=DSR133*DSR13
          DSR135=DSR133*DSR132
          DSR23=DSR-AN23
          DSR232=DSR23*DSR23
          DSR233=DSR232*DSR23
          DSR234=DSR233*DSR23
          DSR235=DSR233*DSR232
C
          IF(R(I) .NE. 0.0D0) THEN
          IF(DSR.LE.1.0D0) THEN
           C11TRYP=-2.0D0*PI*(R(J)/R(I))*(PA1T*(1.0D0-DSR2)/2.0D0
     C          +PB1T*(1.0D0-DSR3)/3.0D0+PD0T*(1.0D0-DSR5)/5.0D0)
          ENDIF
          IF(DSR.LE.DBD2)THEN
           C22TRYM=-2.0*PI*(R(J)/R(I))*(PA2T*(DBD22-DSR2)/2.0D0
     C          +PB2T*(DBD23-DSR3)/3.0D0+PD0T*(DBD25-DSR5)/5.0D0)
          ENDIF
          IF(DSR.LE.DBD3)THEN
           C33TRYS=-2.0*PI*(R(J)/R(I))*(PA3T*(DBD32-DSR2)/2.0D0
     C          +PB3T*(DBD33-DSR3)/3.0D0+PD0T*(DBD35-DSR5)/5.0D0)
          ENDIF
          IF(DSR.LE.AN12)THEN
           C12TRYP=-2.0*PI*(R(J)/R(I))*(PA1T*(AM12*AM12-DSR2)/2.0D0
     C             +PB12T/3.0+PD0T*(AN12+1.0D0/5.0D0))
           C21TRYM=C12TRYP
          ENDIF
          IF(DSR.LE.AN13)THEN
           C13TRYP=-2.0*PI*(R(J)/R(I))*(PA1T*(AM13*AM13-DSR2)/2.0D0
     C             +PB13T/3.0+PD0T*(AN13+1.0D0/5.0D0))
           C31TRYS=C13TRYP
          ENDIF
          IF(DSR.LE.AN23)THEN
           C23TRYM=-2.0*PI*(R(J)/R(I))*(PA2T*(AM23*AM23-DSR2)/2.0D0
     C          +PB23T*DBD23/3.0+PD0T*AN23*DBD24+PD0T*DBD25/5.0D0)
           C32TRYS=C23TRYM
          ENDIF
          IF(DSR.GT.AN12 .AND. DSR.LE.AM12)THEN
           C12TRYP=-2.0*PI*(R(J)/R(I))*(PA1T*(AM12*AM12-DSR2)/2.0D0
     C             +PB12T*(1.0D0-DSR123)/3.0D0+AN12*PD0T*(1.0D0-DSR124)
     C             +PD0T*(1.0D0-DSR125)/5.0D0)
           C21TRYM=C12TRYP
          ENDIF
          IF(DSR.GT.AN13 .AND. DSR.LE.AM13)THEN
           C13TRYP=-2.0*PI*(R(J)/R(I))*(PA1T*(AM13*AM13-DSR2)/2.0D0
     C             +PB13T*(1.0D0-DSR133)/3.0D0+AN13*PD0T*(1.0D0-DSR134)
     C             +PD0T*(1.0D0-DSR135)/5.0D0)
           C31TRYS=C13TRYP
          ENDIF
          IF(DSR.GT.AN23 .AND. DSR.LE.AM23)THEN
           C23TRYM=-2.0*PI*(R(J)/R(I))*(PA2T*(AM23*AM23-DSR2)/2.0D0
     C        +PB23T*(DBD23-DSR233)/3.0D0+AN23*PD0T*(DBD24-DSR234)
     C             +PD0T*(DBD25-DSR235)/5.0D0)
           C32TRYS=C23TRYM
          ENDIF
          ENDIF
C
          WP11(J)=C11TRYP/PC11T
          WP12(J)=C12TRYP/PC12T
          WP13(J)=C13TRYP/PC13T
          WM21(J)=C21TRYM/PC21T
          WM22(J)=C22TRYM/PC22T
          WM23(J)=C23TRYM/PC23T
          WS31(J)=C31TRYS/PC31T
          WS32(J)=C32TRYS/PC32T
          WS33(J)=C33TRYS/PC33T
C
          FUNCP(J)=WP11(J)*DENP(J)+WP12(J)*DENM(J)+WP13(J)*DENS(J)
          FUNCM(J)=WM21(J)*DENP(J)+WM22(J)*DENM(J)+WM23(J)*DENS(J)
          FUNCS(J)=WS31(J)*DENP(J)+WS32(J)*DENM(J)+WS33(J)*DENS(J)
C
200      CONTINUE
C
         CALL SIMPBAR(FUNCP,VALP,1,MESH)
         CALL SIMPBAR(FUNCM,VALM,1,MESH)
         CALL SIMPBAR(FUNCS,VALS,1,MESH)
C
         CALL SIMPBAR(WP11,WNORMP11,1,MESH)
         CALL SIMPBAR(WP12,WNORMP12,1,MESH)
         CALL SIMPBAR(WP13,WNORMP13,1,MESH)
         CALL SIMPBAR(WM21,WNORMM21,1,MESH)
         CALL SIMPBAR(WM22,WNORMM22,1,MESH)
         CALL SIMPBAR(WM23,WNORMM23,1,MESH)
         CALL SIMPBAR(WS31,WNORMS31,1,MESH)
         CALL SIMPBAR(WS32,WNORMS32,1,MESH)
         CALL SIMPBAR(WS33,WNORMS33,1,MESH)
C
         DENBARP(I)=VALP
         DENBARM(I)=VALM
         DENBARS(I)=VALS
         IF(I .GT. MESHBREAK) THEN
          DENBARP(I) = DENAVP + DENAVM + DENAVS
          DENBARM(I) = DENAVP + DENAVM + DENAVS
          DENBARS(I) = DENAVP + DENAVM + DENAVS
         ENDIF
C         IF(I .EQ. 400) write(*,*)WNORMP11,WNORMP12,WNORMP13,
C     C   WNORMM21,WNORMM22,WNORMM23,WNORMS31,WNORMS32,WNORMS33

100     CONTINUE
C
        RETURN
        END
C
       SUBROUTINE C2ELINT(DENP,DENS,DENAVP,DENAVS,DENBARP,DENBARS,
     C                    C1EL11,C1EL13,C1EL31,C1EL33)
       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
       PARAMETER(TOL=1.D-5)
       PARAMETER(PI = 3.141592653589793D0, FPI = 4.0D0*PI)
       PARAMETER(ALH = 30.0D0, DZ = 0.002D0, NMAX=1+(ALH/DZ))
       DIMENSION R(NMAX),DENP(NMAX),DENS(NMAX)
       DIMENSION DENBARP(NMAX),DENBARS(NMAX)
       DIMENSION C2EL11(NMAX),C2EL13(NMAX),C2EL31(NMAX),C2EL33(NMAX)
       DIMENSION C1El11(NMAX),C1EL13(NMAX),C1EL31(NMAX),C1EL33(NMAX)
C
       COMMON/DIST/R
       COMMON/CHARGE/QP,QS,SIGMA,ESTAR
       COMMON/DRATIO/DBD2,DBD3
       COMMON/DENRATIO/XP,XM,XS
       COMMON/MBREAK/MESHBREAK
       EXTERNAL GAMMA
C
       MESH = NMAX
       X1I = -4.0D0
       X2I = 4.0D0
       XCAL= BRENT(GAMMA,X1I,X2I,TOL)
C       WRITE (6,*) XCAL
       XG = XCAL
C
       AM1 = (DBD3+1.0D0)
       AN1 = DABS(DBD3-1.0D0)
       AM12 = (DBD3+1.0D0)/2.0D0
       AN12 = DABS(DBD3-1.0D0)/2.0D0
       DBD22 = DBD3**2
       DBD23 = DBD3**3
       DBD25 = DBD3**5
       ETA = (PI/6.0)*(DENAVP+DBD23*DENAVS)
       ETA1M = 1.D0-ETA
       CVAL = PI/ETA1M/2.0D0
       CHID = 1.D0 + CVAL*(DENAVP/(1.D0+XG)
     C        + DENAVS*DBD23/(1.D0+XG*DBD3))
       CHIN = -CVAL*(DENAVP*QP/(1.D0+XG)
     C        + DENAVS*QS*DBD3/(1.D0+XG*DBD3))
       CHI = CHIN/CHID
       XI1 = (QP + CHI)/(1+XG)
       XI2 = (QS + CHI*DBD22)/(1+XG*DBD3)
       DGAMMA = DENAVP*XI1*XI1 + DENAVS*XI2*XI2
       Y1 = (1.D0+XG)
       Y2 = (1.D0+XG*DBD3)
       YVAL = Y1*Y2
       ADA=ESTAR*ESTAR
C
C      COEFFICIENTS********
       AB0 = 2.D0*ADA*(CHI*CHI*(XG-2.D0)/3.D0/Y1 + CHI*QP*AN1/YVAL
     C      - QP*QS*XG/Y2)
       AL0 = (ADA*AN1*AN1/16.D0/YVAL)*
     C (CHI*CHI*(4.D0*(1.D0+DBD22) - 4.D0*XG*XG*DBD22 - AN1*AN1*YVAL)
     C       + 4.D0*(QP+QS)*CHI + 4.D0*QP*QS*XG*XG)
       AL1 = (ADA/YVAL)*((QP*AN1-QS*AN1)*CHI - 2.D0*XG*QP*QS
     C       - AM1*QP*QS*XG*XG
     C       +(Y2*(XG-2.D0)/3.D0+DBD23*Y1*(XG*DBD3-2.D0)/3.D0)*CHI*CHI)
       AL2 = (ADA/YVAL)*((QP+QS)*CHI + XG*XG*QP*QS
     C       + (1.D0+DBD22-XG*XG*DBD22-AN1*AN1*YVAL/2.D0)*CHI*CHI)
       AL3 = ADA*CHI*CHI/3.D0
       P12 = ADA*QP*QS
C
       AI0 = (ADA/Y1/Y1)*(-2.D0*XG*QP*QP - 2.D0*QP*QP*XG*XG
     C       +(Y1*(XG-2.D0)*2.D0/3.D0)*CHI*CHI)
       AI1 = (ADA/Y1/Y1)*
     C      ((2.D0-XG*XG)*CHI*CHI + 2.D0*QP*CHI + XG*XG*QP*QP)
       AI2 = ADA*CHI*CHI/3.D0
       P11 = ADA*QP*QP
C
       AJ0 = (ADA/Y2/Y2)*(-2.D0*XG*QS*QS - 2.D0*DBD3*QS*QS*XG*XG
     C       +(Y2*(XG*DBD3-2.D0)*DBD23*2.D0/3.D0)*CHI*CHI)
       AJ1 = (ADA/Y2/Y2)*
     C       (2.D0*QS*CHI + XG*XG*QS*QS
     C      + (2.D0*DBD22-XG*XG*DBD22*DBD22)*CHI*CHI)
       AJ2 = ADA*CHI*CHI/3.D0
       P22 = ADA*QS*QS
C
       DO 9100 I=1,MESH
C        DENXP = DABS(QM)*DENBARP(I)/(DABS(QP)+DABS(QM))
C        DENXM = DABS(QP)*DENBARP(I)/(DABS(QP)+DABS(QM))
C        XVAL=DSQRT(FPI*ESTAR*ESTAR*
C     C            (QP*QP*DENXP+QM*QM*DENXM))
C        BVAL=(XVAL+1.0D0-DSQRT(1.0D0+2.0D0*XVAL))/XVAL
C        ADA=ESTAR*ESTAR
C        AEA=ADA*BVAL
C        AFA=AEA*BVAL
        C1EL11(I) = 0.0D0
        C1EL13(I) = 0.0D0
        C1EL31(I) = 0.0D0
        C1EL33(I) = 0.0D0
        DO 9200 J=1,MESH
         C2EL11(J)=0.0
         C2EL13(J)=0.0
         C2EL31(J)=0.0
         C2EL33(J)=0.0
         TERM11=0.0D0
         TERM12=0.0D0
         TERM22=0.0D0
C
         DSR=DABS(R(I)-R(J))
         DSR2=DSR*DSR
         DSR3=DSR2*DSR
         DSR5=DSR3*DSR2
         DSR12=DSR-AN12
         DSR122=DSR12*DSR12
         DSR123=DSR122*DSR12
         DSR124=DSR123*DSR12
         DSR125=DSR123*DSR122
C       
         IF(R(I) .NE. 0.0D0) THEN
         IF(DSR.LE.1.0D0) THEN
          TERM11 = 2.0D0*PI*(R(J)/R(I))*(P11*(1.0-DSR)
     C          + AI0*(1.D0-DSR2)/2.D0
     C          + AI1*(1.D0-DSR3)/3.0D0
     C          + AI2*(1.D0-DSR5)/5.D0)
         ENDIF
C
         IF(DSR.LE.DBD3)THEN
          TERM22 = 2.0D0*PI*(R(J)/R(I))*(P22*(DBD3-DSR)
     C          + AJ0*(DBD22-DSR2)/2.D0
     C          + AJ1*(DBD23-DSR3)/3.0D0
     C          + AJ2*(DBD25-DSR5)/5.D0)
         ENDIF
C
         IF(DSR.LE.AN12)THEN
          TERM12 = 2.0D0*PI*(R(J)/R(I))*(P12*(AM12-DSR)
     C           + AB0*(AN12*AN12-DSR2)/2.D0
     C           + AL0*(AM12-AN12)
     C           + AL1*(AM12*AM12-AN12*AN12)/2.D0
     C           + Al2*(AM12**3-AN12**3)/3.D0
     C           + AL3*(AM12**5-AN12**5)/5.D0)
         ENDIF
C
         IF(DSR.GT.AN12 .AND. DSR.LE.AM12)THEN
          TERM12 = 2.0D0*PI*(R(J)/R(I))*(P12*(AM12-DSR)
     C           + AL0*(AM12-DSR)
     C           + AL1*(AM12*AM12-DSR2)/2.0D0
     C           + AL2*(AM12**3-DSR3)/3.D0
     C           + AL3*(AM12**5-DSR5)/5.D0)

         ENDIF
         ENDIF
         C2EL11(J)=TERM11*(DENP(J)-DENAVP)
         C2EL33(J)=TERM22*(DENS(J)-DENAVS)
         C2EL13(J)=TERM12*(DENS(J)-DENAVS)
         C2EL31(J)=TERM12*(DENP(J)-DENAVP)
9200    CONTINUE
C
         CALL SIMPBAR(C2EL11,VALP11,1,MESH)
         CALL SIMPBAR(C2EL13,VALP13,1,MESH)
         CALL SIMPBAR(C2EL31,VALS31,1,MESH)
         CALL SIMPBAR(C2EL33,VALS33,1,MESH)
         C1EL11(I)=VALP11
         C1El13(I)=VALP13
         C1El31(I)=VALS31
         C1El33(I)=VALS33
         IF(I.GT.MESHBREAK)THEN
          C1EL11(I) = 0.0D0
          C1EL13(I) = 0.0D0
          C1EL31(I) = 0.0D0
          C1EL33(I) = 0.0D0
         ENDIF
9100    CONTINUE
C
        RETURN
        END
C
        SUBROUTINE DENBARAB(DEN,PC11,PC12,PC13,PC21,PC22,PC23,
     C             PC31,PC32,PC33,A1,A2,A3,B1,B2,B3,B12,B13,B23,D0)
        IMPLICIT DOUBLE PRECISION(A-H,O-Z)
        PARAMETER(PI = 3.141592653589793D0, FPI = 4.0D0*PI)
        COMMON/DRATIO/DBD2,DBD3
        COMMON/DENRATIO/XP,XM,XS
C
        DBDN2 = 1.0D0/DBD2
        DBDN3 = 1.0D0/DBD3
        DBD23 = DBD2**3
        DBD33 = DBD3**3
        DBDN23 = 1.0D0/DBD23
        DBDN33 = 1.0D0/DBD33
        DBD24 = DBD23*DBD2
        DBD26 = DBD23*DBD23
        DBD34 = DBD33*DBD3
        DBD36 = DBD33*DBD33
C
        AM12 = (DBD2+1.0D0)/2.0D0
        AN12 = DABS(DBD2-1.0D0)/2.0D0
        AM13 = (DBD3+1.0D0)/2.0D0
        AN13 = DABS(DBD3-1.0D0)/2.0D0
        AM23 = (DBD3+DBD2)/2.0D0
        AN23 = DABS(DBD3-DBD2)/2.0D0
C
        AMN12 = AM12*2.0D0/DBD2
        AMN13 = AM13*2.0D0/DBD3
        AMN23 = AM23*2.0D0/DBD2/DBD3
        ANN12 = AN12*2.0D0/DBD2
        ANN13 = AN13*2.0D0/DBD3
        ANN23 = AN23*2.0D0/DBD2/DBD3
C
        ETA1F=XP/(XP+DBD23*XM+DBD33*XS)
        ETA2F=DBD23*XM/(XP+DBD23*XM+DBD33*XS)
        ETA3F=DBD33*XS/(XP+DBD23*XM+DBD33*XS)
C
        ETA=(PI/6.0)*DEN*(XP+DBD23*XM+DBD33*XS)
        ETA1=ETA*ETA1F
        ETA2=ETA*ETA2F
        ETA3=ETA*ETA3F
        ETA1M=1.0-ETA
        ETA12=ETA1M*ETA1M
        ETA13=ETA12*ETA1M
        ETA14=ETA12*ETA12
C
        BETAPC = ((1.0D0+ETA+ETA**2)*(ETA1+DBDN23*ETA2+DBDN33*ETA3)
     C         - 3.0D0*(ETA1*ETA2*ANN12*ANN12*
     C          (AMN12+ETA1+DBDN2*ETA2+DBDN3*ETA3)
     C  +ETA1*ETA3*ANN13*ANN13*(AMN13+ETA1+DBDN2*ETA2+DBDN3*ETA3)
     C  +ETA2*ETA3*ANN23*ANN23*(AMN23+ETA1+DBDN2*ETA2+DBDN3*ETA3)))/
     C  ETA13
C
        A1=((1.0+ETA+ETA*ETA)+(ETA1+DBDN23*ETA2+DBDN33*ETA3)*
     C      (1.0+2.0*ETA)-3.0D0*(ETA2*ANN12*ANN12*
     C      (AMN12+ETA1+DBDN2*ETA2+DBDN3*ETA3)
     C      +ETA1*ETA2*ANN12*ANN12+ETA3*ANN13*ANN13*
     C      (AMN13+ETA1+DBDN2*ETA2+DBDN3*ETA3)
     C      +ETA1*ETA3*ANN13*ANN13+ETA2*ETA3*ANN23*ANN23))/ETA13
     C      +3.0D0*BETAPC/ETA1M
      A2=DBD23*(DBDN23*(1.0+ETA+ETA*ETA)+(ETA1+DBDN23*ETA2+DBDN33*ETA3)*
     C     (1.0+2.0*ETA)-3.0D0*(ETA1*ANN12*ANN12*
     C      (AMN12+ETA1+DBDN2*ETA2+DBDN3*ETA3)
     C      +ETA1*ETA2*DBDN2*ANN12*ANN12+ETA1*ETA3*DBDN2*ANN13*ANN13
     C      +ETA3*ANN23*ANN23*(AMN23+ETA1+DBDN2*ETA2+DBDN3*ETA3)
     C      +ETA2*ETA3*DBDN2*ANN23*ANN23))/ETA13
     C      +DBD23*3.0D0*BETAPC/ETA1M
      A3=DBD33*(DBDN33*(1.0+ETA+ETA*ETA)+(ETA1+DBDN23*ETA2+DBDN33*ETA3)*
     C     (1.0+2.0*ETA)-3.0D0*(ETA1*ETA2*DBDN3*ANN12*ANN12
     C      +ETA1*ANN13*ANN13*(AMN13+ETA1+DBDN2*ETA2+DBDN3*ETA3)
     C      +ETA1*ETA3*DBDN3*ANN13*ANN13
     C      +ETA2*ANN23*ANN23*(AMN23+ETA1+DBDN2*ETA2+DBDN3*ETA3)
     C      +ETA2*ETA3*DBDN3*ANN23*ANN23))/ETA13
     C      +DBD33*3.0D0*BETAPC/ETA1M
        G11=(1.0-ETA+1.5D0*(ETA1+DBDN2*ETA2+DBDN3*ETA3))/ETA12
        G22=(1.0-ETA+1.5*DBD2*(ETA1+DBDN2*ETA2+DBDN3*ETA3))/ETA12
        G33=(1.0-ETA+1.5*DBD3*(ETA1+DBDN2*ETA2+DBDN3*ETA3))/ETA12
        G12=(G11+DBDN2*G22)/AMN12
        G13=(G11+DBDN3*G33)/AMN13
        G23=(DBDN2*G22+DBDN3*G33)/AMN23
C
        B1=-6.0*(ETA1*G11*G11+ETA2*DBDN2*AMN12*AMN12*G12*G12/4.0D0
     C          +ETA3*DBDN3*AMN13*AMN13*G13*G13/4.0D0)
        B2=-6.0*DBDN2*(ETA2*G22*G22+ETA1*DBD23*AMN12**2*G12*G12/4.0D0
     C          +ETA3*DBDN3*AMN23**2*DBD23*G23*G23/4.0D0)
        B3=-6.0*DBDN3*(ETA3*G33*G33+ETA1*DBD33*AMN13**2*G13*G13/4.0D0
     C          +ETA2*DBDN2*AMN23**2*DBD33*G23*G23/4.0D0)
        B12=-6.0*(ETA1*AM12*G11*G12+ETA2*DBDN2*AMN12*G12*G22/2.0D0
     C          +ETA3*DBDN3*AMN13*DBD2*AMN23*G13*G23/4.0D0)
        B13=-6.0*(ETA1*AM13*G11*G13+ETA3*DBDN3*AMN13*G13*G33/2.0D0
     C           +ETA2*DBDN2*AMN12*DBD3*AMN23*G12*G23/4.0D0)
        B23=-6.0*(ETA1*AM12*AM13*G12*G13
     C           +ETA2*DBDN2*DBD3*AMN23*G22*G23/2.0D0
     C           +ETA3*DBDN3*DBD2*AMN23*G23*G33/2.0D0)
        D0=(ETA1*A1+DBDN23*ETA2*A2+DBDN33*ETA3*A3)/2.0D0
        PC11=-FPI*(A1/3.0+B1/4.0+D0/6.0)
        PC22=-FPI*(DBD23*A2/3.0+DBD24*B2/4.0+DBD26*D0/6.0)
        PC33=-FPI*(DBD33*A3/3.0+DBD34*B3/4.0+DBD36*D0/6.0)
C
        AM122=AM12*AM12
        AM123=AM122*AM12
        AM124=AM123*AM12
        AM125=AM123*AM122
        AM126=AM124*AM122
        AN122=AN12*AN12
        AN123=AN122*AN12
        AN124=AN123*AN12
        AN125=AN123*AN122
        AN126=AN124*AN122
C
        X11=AM124/4.0D0-2.0*AM123*AN12/3.0D0+AM122*AN122/2.0D0
     C    -AN124/12.0D0
        X12=4.0*AN12*(AM125/5.0D0-3.0D0*AM124*AN12/4.0D0+AM123*AN122
     C    -AM122*AN123/2.0D0+AN125/20.0D0)
        X13=AM126/6.0D0-4.0D0*AM125*AN12/5.0D0+3.0D0*AM124*AN122/2.0D0
     C    -4.0D0*AM123*AN123/3.0D0+AM122*AN124/2.0D0-AN126/30.0D0
        PC12=-FPI*(A1*AM123/3.0+B12*X11+D0*(X12+X13))
        PC21=PC12
C
        AM132=AM13*AM13
        AM133=AM132*AM13
        AM134=AM133*AM13
        AM135=AM133*AM132
        AM136=AM134*AM132
        AN132=AN13*AN13
        AN133=AN132*AN13
        AN134=AN133*AN13
        AN135=AN133*AN132
        AN136=AN134*AN132
C
        X21=AM134/4.0D0-2.0*AM133*AN13/3.0D0+AM132*AN132/2.0D0
     C    -AN134/12.0D0
        X22=4.0*AN13*(AM135/5.0D0-3.0D0*AM134*AN13/4.0D0+AM133*AN132
     C    -AM132*AN133/2.0D0+AN135/20.0D0)
        X23=AM136/6.0D0-4.0D0*AM135*AN13/5.0D0+3.0D0*AM134*AN132/2.0D0
     C    -4.0D0*AM133*AN133/3.0D0+AM132*AN134/2.0D0-AN136/30.0D0
        PC13=-FPI*(A1*AM133/3.0+B13*X21+D0*(X22+X23))
        PC31=PC13
C
        AM232=AM23*AM23
        AM233=AM232*AM23
        AM234=AM233*AM23
        AM235=AM233*AM232
        AM236=AM234*AM232
        AN232=AN23*AN23
        AN233=AN232*AN23
        AN234=AN233*AN23
        AN235=AN233*AN232
        AN236=AN234*AN232
C
        X31=AM234/4.0D0-2.0*AM233*AN23/3.0D0+AM232*AN232/2.0D0
     C    -AN234/12.0D0
        X32=4.0*AN23*(AM235/5.0D0-3.0D0*AM234*AN23/4.0D0+AM233*AN232
     C    -AM232*AN233/2.0D0+AN235/20.0D0)
        X33=AM236/6.0D0-4.0D0*AM235*AN23/5.0D0+3.0D0*AM234*AN232/2.0D0
     C    -4.0D0*AM233*AN233/3.0D0+AM232*AN234/2.0D0-AN236/30.0D0
        PC23=-FPI*(A2*AM233/3.0+B23*X31+D0*(X32+X33))
        PC32=PC23
C
        RETURN
        END
C
        SUBROUTINE CFUNAB(DENP1,DENM2,DENS3,C11P0,C12P0,C13P0,
     C                    C21M0,C22M0,C23M0,C31S0,C32S0,C33S0)
        IMPLICIT DOUBLE PRECISION(A-H,O-Z)
        PARAMETER(PI = 3.141592653589793D0, FPI = 4.0D0*PI)
        COMMON/DENRATIO/XP,XM,XS
C
        DENPL = 0.0D0
        DENPU = DENP1
        DDENP = 0.001D0
        NDP = (DENPU-DENPL)/DDENP + 1
        DDDENP = (DENPU - DENPL)/(NDP)
C 
        SUM11P = 0.0D0
        SUM12P = 0.0D0
        SUM13P = 0.0D0
        DO I = 1, NDP
         RHOP = DENPL + (I-1)*DDDENP
         CALL DENBARAB(RHOP,PC11P,PC12P,PC13P,PC21P,PC22P,PC23P,
     C    PC31P,PC32P,PC33P,A1P,A2P,A3P,B1P,B2P,B3P,B12P,B13P,B23P,D0P)
         SUM11P = SUM11P + PC11P
         SUM12P = SUM12P + PC12P
         SUM13P = SUM13P + PC13P
         IF(I.NE. 1 .OR. I .NE. NDP) THEN
          SUM11P = SUM11P + PC11P
          SUM12P = SUM12P + PC12P
          SUM13P = SUM13P + PC13P
         ENDIF
        ENDDO
        C11P0 = XP*SUM11P*0.5D0*DDDENP
        C12P0 = XM*SUM12P*0.5D0*DDDENP
        C13P0 = XS*SUM13P*0.5D0*DDDENP
C
C        write(*,*)C11P0,C12P0,C13P0,SUM11P,SUM12P,SUM13P
        DENML = 0.0D0
        DENMU = DENM2
        DDENM = 0.001D0
        NDM = (DENMU-DENML)/DDENM + 1
        DDDENM = (DENMU - DENML)/(NDM)
        SUM21M = 0.0D0
        SUM22M = 0.0D0
        SUM23M = 0.0D0
        DO I = 1, NDM
         RHOM = DENML + (I-1)*DDDENM
         CALL DENBARAB(RHOM,PC11M,PC12M,PC13M,PC21M,PC22M,PC23M,
     C    PC31M,PC32M,PC33M,A1M,A2M,A3M,B1M,B2M,B3M,B12M,B13M,B23M,D0M)
         SUM21M = SUM21M + PC21M
         SUM22M = SUM22M + PC22M
         SUM23M = SUM23M + PC23M
         IF(I .NE. 1 .OR. I .NE. NDM) THEN
          SUM21M = SUM21M + PC21M
          SUM22M = SUM22M + PC22M
          SUM23M = SUM23M + PC23M
         ENDIF
        ENDDO
        C21M0 = XP*SUM21M*0.5D0*DDDENM
        C22M0 = XM*SUM22M*0.5D0*DDDENM
        C23M0 = XS*SUM23M*0.5D0*DDDENM
C
        DENSL = 0.0D0
        DENSU = DENS3
        DDENS = 0.001D0
        NDS = (DENSU-DENSL)/DDENS + 1
        DDDENS = (DENSU - DENSL)/(NDS)
        SUM31S = 0.0D0
        SUM32S = 0.0D0
        SUM33S = 0.0D0
        DO I = 1, NDS
         RHOS = DENSL + (I-1)*DDDENS
         CALL DENBARAB(RHOS,PC11S,PC12S,PC13S,PC21S,PC22S,PC23S,
     C    PC31S,PC32S,PC33S,A1S,A2S,A3S,B1S,B2S,B3S,B12S,B13S,B23S,D0S)
         SUM31S = SUM31S + PC31S
         SUM32S = SUM32S + PC32S
         SUM33S = SUM33S + PC33S
         IF(I .NE. 1 .OR. I .NE. NDS) THEN
          SUM31S = SUM31S + PC31S
          SUM32S = SUM32S + PC32S
          SUM33S = SUM33S + PC33S
         ENDIF
        ENDDO
        C31S0 = XP*SUM31S*0.5D0*DDDENS
        C32S0 = XM*SUM32S*0.5D0*DDDENS
        C33S0 = XS*SUM33S*0.5D0*DDDENS
C
        RETURN
        END
C
      DOUBLE PRECISION FUNCTION GAMMA(X)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(PI = 3.141592653589793D0)
       COMMON/CHARGE/QP,QS,SIGMA,ESTAR
       COMMON/DRATIO/DBD2,DBD3
       COMMON/DENRATIO/XP,XM,XS
       COMMON/DENSITY/DENAVT
C
      DBD22 = DBD3**2
      DBD23 = DBD3**3
       DENAVP = XP*DENAVT
       DENAVS = XS*DENAVT
       ETA = (PI/6.0)*(DENAVP+DBD23*DENAVS)
       ETA1M = 1.D0-ETA
       CVAL = PI/ETA1M/2.0D0
       CHID = 1.D0 + CVAL*(DENAVP/(1.D0+X) + DENAVS*DBD23/(1.D0+X*DBD3))
       CHIN = -CVAL*(DENAVP*QP/(1.D0+X) + DENAVS*QS*DBD3/(1.D0+X*DBD3))
       CHI = CHIN/CHID
       XI1 = (QP + CHI)/(1+X)
       XI2 = (QS + CHI*DBD22)/(1+X*DBD3)
       DGAMMA = DENAVP*XI1*XI1 + DENAVS*XI2*XI2
       GAMMA = X*X - PI*ESTAR*ESTAR*DGAMMA
C
      RETURN
      END
C
        DOUBLE PRECISION FUNCTION BRENT(FUNC,X1,X2,TOL)
        IMPLICIT DOUBLE PRECISION (A-H,O-Z)
        EXTERNAL FUNC
C       PROGRAM TO FIND THE ROOT OF FUNC KNOWN TO LIE BETWEEN
C       X1 AND X2
C       PARAPHRASED FROM `NUMERICAL RECIPES', W. H. PRESS ET AL.
        ITMAX = 100     
        EPS = 3.D-8
        A = X1
        B = X2
        FA = FUNC(A)
        FB = FUNC(B)
        FC = FB
        DO 11 ITER = 1, ITMAX
         IF(FB*FC.GT.0.0)THEN
          C = A
          FC = FA
          D = B-A
          E = D
         ENDIF
         IF(DABS(FC).LT.DABS(FB))THEN
          A = B
          B = C
          C = A
          FA = FB
          FB = FC
          FC = FA
         ENDIF
         TOL1 = 2.*EPS*DABS(B)+0.5*TOL
         XM  = 0.5*(C-B)
         IF(DABS(XM).LE.TOL1.OR.FB.EQ.0.0)THEN
          BRENT = B
          RETURN
         ENDIF
         IF(DABS(E).GE.TOL1.AND.DABS(FA).GT.DABS(FB))THEN
          S = FB/FA
          IF(A.EQ.C)THEN
           P = 2.*XM*S
           Q = 1. -S
          ELSE
           Q = FA/FC
           R = FB/FC
           P = S*(2.*XM*Q*(Q-R)-(B-A)*(R-1.))
           Q = (Q-1.)*(R-1.)*(S-1.)
          ENDIF
          IF(P.GT.0.) Q = -Q
          P = DABS(P)
          IF(2.*P.LT.MIN(3.*XM*Q-DABS(TOL1*Q),DABS(E*Q)))THEN
           E = D
           D = P/Q
          ELSE
           D = XM
           E = D
          ENDIF
         ELSE
          D = XM
          E = D
         ENDIF
         A = B
         FA = FB
         IF(DABS(D).GT.TOL1)THEN
          B = B + D
         ELSE
          B = B + SIGN(TOL1,XM)
         ENDIF
         FB = FUNC(B)
11      CONTINUE
        WRITE(6,*)'BRENT: EXCEEDED MAXIMUM ITERATIONS'
        BRENT = B
        RETURN
        END             
