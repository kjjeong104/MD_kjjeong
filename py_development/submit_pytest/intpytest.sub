# HTCondor submit file
#
# Specify the HTCondor Universe (vanilla is the default and is used
#  for almost all jobs) AND the desired name of the HTCondor log file.
#  Wherever you see $(Cluster), HTCondor will insert the queue number
#  assigned to this set of jobs at the time of submission.
universe = vanilla
log = intpytest_$(Cluster).log
#
# Specify your executable (single binary or a script that runs several
#  commands), arguments, and a files for HTCondor to store standard
#  output (or "screen output").
#  $(Process) will be a integer number for each job, starting with "0"
#  and increasing for the relevant number of jobs.
executable = writing.sh
arguments = $(Process)
+IsBuildJob = true
output = intpytest_$(Cluster)_$(Process).out
#
# Specify that HTCondor should transfer files to and from the
#  computer where each job runs. The last of these lines *would* be
#  used if there were any other files needed for the executable to run.
should_transfer_files = YES
when_to_transfer_output = ON_EXIT_OR_EVICT
#+is_resumable = true
transfer_input_files = Python-3.4.3.tgz, Surf_nvt353s_0_50.xtc, Surf_nvt353s_50ns.gro, micelle_v062_port.py,space136_sigma.gro  

#
# Tell HTCondor what amount of compute resources
#  each job will need on the computer where it runs.
#  (Memory is in MBs; we'll ask for 1GB)
#  (Disk space is in KBs, we'll ask for 1 MB)
request_cpus = 1
request_memory = 4000
request_disk = 8000
#
# Tell HTCondor to run n instances of our job:
queue 

